{"version":3,"sources":["WeatherTile.js","WeatherCard.js","App.js","index.js"],"names":["WeatherTile","this","props","city","idx","deletecity","className","id","onClick","location","name","region","tz_id","src","current","condition","icon","alt","temp_c","text","feelslike_c","pressure_mb","wind_kph","precip_mm","vis_km","humidity","uv","Component","WeatherCard","onsubmit","e","preventDefault","input","document","getElementById","value","list","JSON","parse","localStorage","getItem","push","setItem","stringify","Promise","all","map","i","fetch","then","response","json","catch","err","console","log","message","res","length","error","pop","window","alert","setState","data","display","deleteCity","filteredlist","filter","item","filteredarr","state","onSubmit","type","href","xmlns","width","height","viewBox","d","React","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c4124e8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class WeatherTile extends Component {\r\n    \r\n    render() {\r\n        let {city,idx,deletecity}=this.props;\r\n        return (\r\n            <div className=\"tilediv\" key={idx}>\r\n                <button id=\"close\" onClick={()=>deletecity(idx)} >X</button>\r\n                <div>\r\n                    <h2 className=\"name\">{city.location.name}</h2>\r\n                    <p className=\"smallfont\">{city.location.region}</p>\r\n                    <p className=\"smallfont\">{city.location.tz_id}</p>\r\n                </div>\r\n                <div className=\"row_flex\">\r\n                    <div>\r\n                        <img id=\"icon\" src={city.current.condition.icon} alt=\"icon\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h1 id=\"temp\">{city.current.temp_c}<span className=\"small\">&#x2103;</span></h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row_flex\">\r\n                    <div>\r\n                        <p id=\"condition\">{city.current.condition.text}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>Feels Like: <span>{city.current.feelslike_c}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row_flex\">\r\n                    <div className=\"left\">\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">Pressure: </div> <div>{city.current.pressure_mb} mb</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">Wind: </div> <div>{city.current.wind_kph}kph</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">Precipitation: </div><div>{city.current.precip_mm}mm</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">Visibility: </div><div>{city.current.vis_km}km</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">Humidity: </div><div> {city.current.humidity}%</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"smallfont\">UV index: </div><div>{city.current.uv}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport WeatherTile from './WeatherTile';\r\n\r\n\r\nclass WeatherCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data : [],\r\n            display: false\r\n        }\r\n    }\r\n\r\n    onsubmit=(e)=>{\r\n        e.preventDefault();\r\n        let input=document.getElementById(\"cityname\").value;\r\n        let list = JSON.parse(localStorage.getItem(\"list\"));\r\n        if(list){\r\n            list.push(input);\r\n        }\r\n        else{\r\n            list=[input];\r\n        }\r\n        localStorage.setItem(\"list\",JSON.stringify(list));\r\n        Promise.all(list.map((city,i)=>{\r\n            return(\r\n                fetch(`https://api.weatherapi.com/v1/current.json?key=2179903f2c2940eb89b202319211306&q=${city}&aqi=no`)\r\n                .then(response=>{\r\n                    return response.json();\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err.message);\r\n                })\r\n            );\r\n        }))\r\n        .then(res=>{\r\n            let n=(res.length);\r\n            if(res[n-1].error){\r\n                list.pop(); \r\n                window.alert(\"Enter a valid City\");\r\n                localStorage.setItem(\"list\", JSON.stringify(list));\r\n            }\r\n            this.setState({data : res}, ()=>{ if(list.length)this.setState({display : true})});\r\n        })\r\n        document.getElementById(\"cityname\").value=\"\";\r\n    }\r\n\r\n    deleteCity=(idx)=>{\r\n        let list = JSON.parse(localStorage.getItem(\"list\"));\r\n        let filteredlist= list.filter((item,i)=>{\r\n            return i!==idx;\r\n        });\r\n        localStorage.setItem(\"list\",JSON.stringify(filteredlist));\r\n        let arr=this.state.data;\r\n        let filteredarr=arr.filter((item,i)=>{\r\n            return i!==idx;\r\n        });\r\n        this.setState({data: filteredarr});\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        let list = JSON.parse(localStorage.getItem(\"list\"));\r\n        if(list){\r\n            Promise.all(list.map((city,i)=>{ //wrap in ternary\r\n                return(\r\n                    fetch(`https://api.weatherapi.com/v1/current.json?key=2179903f2c2940eb89b202319211306&q=${city}&aqi=no`)\r\n                    .then(response=>{\r\n                        return response.json();\r\n                    })\r\n                );\r\n            }))\r\n            .then(res=>{\r\n                this.setState({data : res}, ()=>{ if(list.length)this.setState({display : true})});\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div id=\"main\" >\r\n                    <form id=\"heading\" onSubmit={this.onsubmit}>\r\n                        <h1 >Live Weather</h1>\r\n                        <span>Enter city name: </span><input id=\"cityname\" type=\"text\" />\r\n                    </form>\r\n                    <div id=\"tiles\">\r\n                        {\r\n                            (this.state.display)? \r\n                                this.state.data.map((city,i)=>{\r\n                                    if(!city.error) return <WeatherTile key={i} deletecity={this.deleteCity} city={city} idx={i}/>\r\n                                })\r\n                            :  <></>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div id=\"sign\"><span><a href=\"https://github.com/RameeshRoshan\"><svg xmlns=\"https://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg></a></span></div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherCard;","import './App.css';\nimport WeatherCard from \"./WeatherCard\";\n\nfunction App() {\n\n  return (\n    <WeatherCard/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}